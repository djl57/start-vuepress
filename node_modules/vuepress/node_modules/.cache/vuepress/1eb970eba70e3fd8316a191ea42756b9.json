{"remainingRequest":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\github\\start-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\github\\start-vuepress\\docs\\jsdoc\\number.md?vue&type=template&id=37063e84&","dependencies":[{"path":"E:\\github\\start-vuepress\\docs\\jsdoc\\number.md","mtime":1547684079330},{"path":"E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"使用全局的isNaN()方法\")]),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._v(\" \"),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._v(\" \"),\n    _vm._m(37),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _vm._v(\" \"),\n    _vm._m(39),\n    _vm._v(\" \"),\n    _vm._m(40),\n    _vm._v(\" \"),\n    _vm._m(41),\n    _vm._v(\" \"),\n    _vm._m(42),\n    _vm._v(\" \"),\n    _vm._m(43),\n    _vm._v(\" \"),\n    _vm._m(44),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(45),\n    _vm._v(\" \"),\n    _vm._m(46),\n    _vm._v(\" \"),\n    _vm._m(47),\n    _vm._v(\" \"),\n    _vm._m(48),\n    _vm._v(\" \"),\n    _vm._m(49),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(50),\n    _vm._v(\" \"),\n    _vm._m(51),\n    _vm._v(\" \"),\n    _vm._m(52),\n    _vm._v(\" \"),\n    _vm._m(53),\n    _vm._v(\" \"),\n    _vm._m(54),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(55),\n    _vm._v(\" \"),\n    _vm._m(56),\n    _vm._v(\" \"),\n    _vm._m(57),\n    _vm._v(\" \"),\n    _vm._m(58),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"如果只验证运算结果是否为安全整数，很可能得到错误结果。\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"http://es6.ruanyifeng.com/#docs/number#Number-isFinite-Number-isNaN\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"同时验证两个运算数和运算结果的方法\"), _c(\"OutboundLink\")],\n          1\n        )\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(59),\n    _vm._v(\" \"),\n    _vm._m(60),\n    _vm._v(\" \"),\n    _vm._m(61),\n    _vm._v(\" \"),\n    _vm._m(62),\n    _vm._v(\" \"),\n    _vm._m(63),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(64),\n    _vm._v(\" \"),\n    _vm._m(65),\n    _vm._v(\" \"),\n    _vm._m(66),\n    _vm._v(\" \"),\n    _vm._m(67),\n    _vm._v(\" \"),\n    _vm._m(68)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"数字类型\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#数字类型\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 数字类型\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在非构造器上下文中 (如：没有 new 操作符)，Number 能被用来执行类型转换。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"如果参数无法被转换为数字，则返回 NaN\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"所有 Number 实例都继承自 Number.prototype(此方法返回Number的构造器)。被修改的 Number 构造器的原型对象对全部 Number 实例都生效。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"number对象属性\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number对象属性\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number对象属性\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"constructor\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#constructor\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" constructor\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：返回对创建此对象的-number-函数的引用\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：返回对创建此对象的-number-函数的引用\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：返回对创建此对象的 Number 函数的引用\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"prototype\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#prototype\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" prototype\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：使有能力向对象添加属性和方法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#描述：使有能力向对象添加属性和方法\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：使有能力向对象添加属性和方法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"max-value\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#max-value\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" MAX_VALUE\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：可表示的最大的数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#描述：可表示的最大的数\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：可表示的最大的数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"Number\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token constant\" } }, [\n            _vm._v(\"MAX_VALUE\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 1.7976931348623157e+308\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"min-value\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#min-value\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" MIN_VALUE\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：可表示的最小的数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#描述：可表示的最小的数\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：可表示的最小的数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"Number\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token constant\" } }, [\n            _vm._v(\"MIN_VALUE\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 5e-324\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"nan\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#nan\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" NaN\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：非数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#描述：非数\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：非数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"扩展：如何判断一个数是nan？\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#扩展：如何判断一个数是nan？\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 扩展：如何判断一个数是NaN？\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"negative-infinity\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#negative-infinity\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" NEGATIVE_INFINITY\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：负无穷大，溢出时返回该值。\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#描述：负无穷大，溢出时返回该值。\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：负无穷大，溢出时返回该值。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"positive-infinity\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#positive-infinity\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" POSITIVE_INFINITY\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：正无穷大，溢出时返回该值。\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#描述：正无穷大，溢出时返回该值。\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：正无穷大，溢出时返回该值。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"number对象方法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number对象方法\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number对象方法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"tostring\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#tostring\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" toString()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：把一个-number-对象转换为一个字符串，并返回结果\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：把一个-number-对象转换为一个字符串，并返回结果\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：把一个 Number 对象转换为一个字符串，并返回结果\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      {\n        attrs: {\n          id:\n            \"参数：-radix-：可选，进制值，2-36，例如，当-radix-为-2-时，numberobject-会被转换为二进制值表示的字符串，不填时默认为10进制\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#参数：-radix-：可选，进制值，2-36，例如，当-radix-为-2-时，numberobject-会被转换为二进制值表示的字符串，不填时默认为10进制\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\n          \" 参数：[radix]：可选，进制值，2~36，例如，当 radix 为 2 时，NumberObject 会被转换为二进制值表示的字符串，不填时默认为10进制\"\n        )\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"tolocalestring\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#tolocalestring\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" toLocaleString()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：可把一个-number-对象转换为本地格式的字符串\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：可把一个-number-对象转换为本地格式的字符串\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：可把一个 Number 对象转换为本地格式的字符串\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"tofixed\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#tofixed\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" toFixed()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：把-number-四舍五入为指定小数位数的数字\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：把-number-四舍五入为指定小数位数的数字\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：把 Number 四舍五入为指定小数位数的数字\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"参数：-num-：必需，指定的小数位数，一般0-20\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#参数：-num-：必需，指定的小数位数，一般0-20\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 参数：[num]：必需，指定的小数位数，一般0 ~ 20\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"toexponential\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#toexponential\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" toExponential()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：把对象的值转换成指数计数法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#描述：把对象的值转换成指数计数法\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：把对象的值转换成指数计数法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"参数：-num-：必需，指数计数法中的小数位数，一般0-20\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#参数：-num-：必需，指数计数法中的小数位数，一般0-20\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 参数：[num]：必需，指数计数法中的小数位数，一般0 ~ 20\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"toprecision\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#toprecision\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" toPrecision()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：可在对象的值超出指定位数时将其转换为指数计数法\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：可在对象的值超出指定位数时将其转换为指数计数法\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：可在对象的值超出指定位数时将其转换为指数计数法\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      {\n        attrs: {\n          id:\n            \"参数：-num-：必需，规定必须被转换为指数计数法的最小位数，一般1-21\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#参数：-num-：必需，规定必须被转换为指数计数法的最小位数，一般1-21\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\n          \" 参数：[num]：必需，规定必须被转换为指数计数法的最小位数，一般1 ~ 21\"\n        )\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"valueof\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#valueof\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" valueOf()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：返回原始数值\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#描述：返回原始数值\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：返回原始数值\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"es6新增\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#es6新增\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" ES6新增\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"number-isnan\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number-isnan\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number.isNaN()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：确定传递的值是否为-nan和其类型是否是-number\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：确定传递的值是否为-nan和其类型是否是-number\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：确定传递的值是否为 NaN和其类型是否是 Number\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"参数：-value-：要被检测是否是-nan-的值\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#参数：-value-：要被检测是否是-nan-的值\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 参数：[value]：要被检测是否是 NaN 的值\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      {\n        attrs: {\n          id: \"返回值：true：参数是number类型并且值为nan；false：其他情况\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#返回值：true：参数是number类型并且值为nan；false：其他情况\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 返回值：true：参数是Number类型并且值为NaN；false：其他情况\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"NaN连它自己都不相等，更别说等于别的了，所以必须要有一个方法来判断一个值是否为NaN\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [\n        _vm._v(\"和全局函数 isNaN() 相比\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"和全局函数 isNaN() 相比，该方法不会强制将参数转换成数字，只有在参数是真正的数字类型，且值为 NaN 的时候才会返回 true。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"number-isfinite\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number-isfinite\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number.isFinite()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      {\n        attrs: {\n          id: \"描述：用来检测传入的参数是否是一个有穷数（finite-number）\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#描述：用来检测传入的参数是否是一个有穷数（finite-number）\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：用来检测传入的参数是否是一个有穷数（finite number）\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"参数：-value-：要被检测有穷性的值\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#参数：-value-：要被检测有穷性的值\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 参数：[value]：要被检测有穷性的值\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      {\n        attrs: {\n          id: \"返回值：true：参数是number类型的，且是有穷的；false：其他情况\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#返回值：true：参数是number类型的，且是有穷的；false：其他情况\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 返回值：true：参数是Number类型的，且是有穷的；false：其他情况\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"和全局的 isFinite() 函数相比，这个方法不会强制将一个非数值的参数转换成数值，这就意味着，只有数值类型的值，且是有穷的（finite），才返回 true。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"number-isinteger\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number-isinteger\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number.isInteger()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：用来判断给定的参数是否为整数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#描述：用来判断给定的参数是否为整数\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：用来判断给定的参数是否为整数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"参数：-value-：要判断是否为整数的参数\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#参数：-value-：要判断是否为整数的参数\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 参数：[value]：要判断是否为整数的参数\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      {\n        attrs: {\n          id:\n            \"返回值：true：被检测的参数是number类型的，且是整数；false：其他情况\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#返回值：true：被检测的参数是number类型的，且是整数；false：其他情况\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\n          \" 返回值：true：被检测的参数是Number类型的，且是整数；false：其他情况\"\n        )\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"NaN 和正负 Infinity 不是整数\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"number-issafeinteger\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number-issafeinteger\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number.isSafeInteger()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：检测参数是否为安全整数-253-1-至-253-1之间\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：检测参数是否为安全整数-253-1-至-253-1之间\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：检测参数是否为安全整数 ( -(253 - 1) 至 253 - 1之间)\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"参数：-value-：要被检测的值\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#参数：-value-：要被检测的值\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 参数：[value]：要被检测的值\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      {\n        attrs: {\n          id:\n            \"返回值：true：被检测的参数是number类型的，且是安全整数；false：其他情况\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#返回值：true：被检测的参数是number类型的，且是安全整数；false：其他情况\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\n          \" 返回值：true：被检测的参数是Number类型的，且是安全整数；false：其他情况\"\n        )\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"number-parsefloat\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number-parsefloat\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number.parseFloat()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"描述：把一个字符串解析成浮点数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#描述：把一个字符串解析成浮点数\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 描述：把一个字符串解析成浮点数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"参数：-string-：被解析的字符串\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#参数：-string-：被解析的字符串\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 参数：[string]：被解析的字符串\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"返回值：解析成功，返回浮点数；解析失败，返回nan\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#返回值：解析成功，返回浮点数；解析失败，返回nan\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 返回值：解析成功，返回浮点数；解析失败，返回NaN\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"该方法与全局的 parseFloat() 函数相同，并且处于 ECMAScript 6 规范中（用于全局变量的模块化）\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"number-parseint\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#number-parseint\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Number.parseInt()\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"描述：根据给定的进制数把一个字符串解析成整数\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#描述：根据给定的进制数把一个字符串解析成整数\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 描述：根据给定的进制数把一个字符串解析成整数\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"参数：-string-：被解析的字符串；-radix-：进制数\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#参数：-string-：被解析的字符串；-radix-：进制数\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 参数：[string]：被解析的字符串；[radix]：进制数\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h4\",\n      { attrs: { id: \"返回值：解析成功，返回浮点数；解析失败，返回nan-2\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#返回值：解析成功，返回浮点数；解析失败，返回nan-2\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 返回值：解析成功，返回浮点数；解析失败，返回NaN\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"该方法和全局的 parseInt() 函数是同一个函数：\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"Number.parseInt === parseInt; // true\")])])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}