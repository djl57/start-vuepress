{"remainingRequest":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\github\\start-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\github\\start-vuepress\\docs\\jsdoc\\bibao.md?vue&type=template&id=e02c758c&","dependencies":[{"path":"E:\\github\\start-vuepress\\docs\\jsdoc\\bibao.md","mtime":1547529452106},{"path":"E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"闭包\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#闭包\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 闭包\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"什么是闭包\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#什么是闭包\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 什么是闭包\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"闭包（英语：Closure），又称词法闭包（Lexical Closure）或函数闭包（function closures），是引用了自由变量的函数。这个被引用的自由变量将和这个函数一同存在，即使已经离开了创造它的环境也不例外。所以，有另一种说法认为闭包是由函数和与其相关的引用环境组合而成的实体。闭包在运行时可以有多个实例，不同的引用环境和相同的函数组合可以产生不同的实例。\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"闭包可能形成的原因\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#闭包可能形成的原因\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 闭包可能形成的原因\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"在函数中可以（嵌套）定义另一个函数时，如果内部的函数引用了外部的函数的变量，则可能产生闭包。运行时，一旦外部的 函数被执行，一个闭包就形成了，闭包中包含了内部函数的代码，以及所需外部函数中的变量的引用。其中所引用的变量称作上值(upvalue)。\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"闭包与匿名函数区别\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#闭包与匿名函数区别\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 闭包与匿名函数区别\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"闭包一词经常和匿名函数混淆。这可能是因为两者经常同时使用，但是它们是不同的概念\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"闭包的作用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#闭包的作用\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 闭包的作用\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"闭包可以用来在一个函数与一组“私有”变量之间创建关联关系。在给定函数被多次调用的过程中，这些私有变量能够保持其持久性。变量的作用域仅限于包含它们的函数，因此无法从其它程序代码部分进行访问。不过，变量的生存期是可以很长，在一次函数调用期间所创建所生成的值在下次函数调用时仍然存在。正因为这一特点，闭包可以用来完成信息隐藏，并进而应用于需要状态表达的某些编程范型中。不过，用这种方式来使用闭包时，闭包不再具有引用透明性，因此也不再是纯函数。\")])])])}]\n\nexport { render, staticRenderFns }"]}