{"remainingRequest":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\github\\start-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\github\\start-vuepress\\docs\\jsdoc\\operator.md?vue&type=template&id=7852920c&","dependencies":[{"path":"E:\\github\\start-vuepress\\docs\\jsdoc\\operator.md","mtime":1548134637249},{"path":"E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\github\\start-vuepress\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"运算符\"><a class=\"header-anchor\" href=\"#运算符\" aria-hidden=\"true\">#</a> 运算符</h1>\n<h2 id=\"in\"><a class=\"header-anchor\" href=\"#in\" aria-hidden=\"true\">#</a> in</h2>\n<h4 id=\"描述：指定的属性是否在指定的对象中或其原型链中\"><a class=\"header-anchor\" href=\"#描述：指定的属性是否在指定的对象中或其原型链中\" aria-hidden=\"true\">#</a> 描述：指定的属性是否在指定的对象中或其原型链中</h4>\n<h4 id=\"参数：-prop-：指定属性；-obj-：指定对象\"><a class=\"header-anchor\" href=\"#参数：-prop-：指定属性；-obj-：指定对象\" aria-hidden=\"true\">#</a> 参数：[prop]：指定属性；[obj]：指定对象</h4>\n<h4 id=\"返回值：在则返回true，不在返回fasle\"><a class=\"header-anchor\" href=\"#返回值：在则返回true，不在返回fasle\" aria-hidden=\"true\">#</a> 返回值：在则返回true，不在返回fasle</h4>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'djlun'</span> <span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// 数组</span>\n<span class=\"token keyword\">var</span> trees <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redwood\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bay\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cedar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"oak\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"maple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">0</span> <span class=\"token keyword\">in</span> trees        <span class=\"token comment\">// 返回true</span>\n<span class=\"token number\">3</span> <span class=\"token keyword\">in</span> trees        <span class=\"token comment\">// 返回true</span>\n<span class=\"token number\">6</span> <span class=\"token keyword\">in</span> trees        <span class=\"token comment\">// 返回false</span>\n<span class=\"token string\">\"bay\"</span> <span class=\"token keyword\">in</span> trees    <span class=\"token comment\">// 返回false (必须使用索引号,而不是数组元素的值)</span>\n\n<span class=\"token string\">\"length\"</span> <span class=\"token keyword\">in</span> trees <span class=\"token comment\">// 返回true (length是一个数组属性)</span>\n\nSymbol<span class=\"token punctuation\">.</span>iterator <span class=\"token keyword\">in</span> trees <span class=\"token comment\">// 返回true (数组可迭代，只在ES2015+上有效)</span>\n\n\n<span class=\"token comment\">// 内置对象</span>\n<span class=\"token string\">\"PI\"</span> <span class=\"token keyword\">in</span> Math          <span class=\"token comment\">// 返回true</span>\n\n<span class=\"token comment\">// 自定义对象</span>\n<span class=\"token keyword\">var</span> mycar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>make<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Honda\"</span><span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Accord\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token string\">\"make\"</span> <span class=\"token keyword\">in</span> mycar  <span class=\"token comment\">// 返回true</span>\n<span class=\"token string\">\"model\"</span> <span class=\"token keyword\">in</span> mycar <span class=\"token comment\">// 返回true</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>in右操作数必须是一个对象值。例如，你可以指定使用String构造函数创建的字符串，但不能指定字符串文字:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> color1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"length\"</span> <span class=\"token keyword\">in</span> color1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">var</span> color2 <span class=\"token operator\">=</span> <span class=\"token string\">\"coral\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"length\"</span> <span class=\"token keyword\">in</span> color2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 报错(Cannot use 'in' operator to search for 'length' in coral)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"instanceof\"><a class=\"header-anchor\" href=\"#instanceof\" aria-hidden=\"true\">#</a> instanceof</h2>\n<h4 id=\"描述：用于测试构造函数的prototype属性是否出现在对象的原型链中的任何位置\"><a class=\"header-anchor\" href=\"#描述：用于测试构造函数的prototype属性是否出现在对象的原型链中的任何位置\" aria-hidden=\"true\">#</a> 描述：用于测试构造函数的prototype属性是否出现在对象的原型链中的任何位置</h4>\n<h4 id=\"语法：\"><a class=\"header-anchor\" href=\"#语法：\" aria-hidden=\"true\">#</a> 语法：</h4>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>object <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">constructor</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"解构赋值\"><a class=\"header-anchor\" href=\"#解构赋值\" aria-hidden=\"true\">#</a> 解构赋值</h2>\n<h4 id=\"描述：使得可以将值从数组或属性从对象提取到不同的变量中。\"><a class=\"header-anchor\" href=\"#描述：使得可以将值从数组或属性从对象提取到不同的变量中。\" aria-hidden=\"true\">#</a> 描述：使得可以将值从数组或属性从对象提取到不同的变量中。</h4>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span>\n\n<span class=\"token comment\">// 剩余元素必须是数组的最后一个元素</span>\n<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [30, 40, 50]</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">'djlun'</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'djlun'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 18</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">'djlun'</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span>newName<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span>newAge<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newName<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'djlun'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newAge<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 18</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 20</span>\n\n<span class=\"token comment\">// 因为左边的{a, b}被认为是一个块而不是对象字面量。</span>\n<span class=\"token comment\">// ( ... ) 表达式需要一个分号在它前面，否则它也许会被当成上一行中的函数来执行</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//{c: 30, d: 40}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\" target=\"_blank\" rel=\"noopener noreferrer\">MDN更多例子<OutboundLink/></a></p>\n<hr>\n<h3 id=\"函数参数默认值\"><a class=\"header-anchor\" href=\"#函数参数默认值\" aria-hidden=\"true\">#</a> 函数参数默认值</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawES5Chart</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  options <span class=\"token operator\">=</span> options <span class=\"token operator\">===</span> undefined <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> options<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> size <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>size <span class=\"token operator\">===</span> undefined <span class=\"token operator\">?</span> <span class=\"token string\">'big'</span> <span class=\"token punctuation\">:</span> options<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> cords <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>cords <span class=\"token operator\">===</span> undefined <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> options<span class=\"token punctuation\">.</span>cords<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> radius <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">===</span> undefined <span class=\"token operator\">?</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">:</span> options<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> cords<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">drawES5Chart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cords<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  radius<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 这里如果没有 = {} 则在函数没有传参的情况下会报错</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">drawES2015Chart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>size <span class=\"token operator\">=</span> <span class=\"token string\">'big'</span><span class=\"token punctuation\">,</span> cords <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> cords<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">drawES2015Chart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cords<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  radius<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h3 id=\"解构-嵌套对象和数组\"><a class=\"header-anchor\" href=\"#解构-嵌套对象和数组\" aria-hidden=\"true\">#</a> 解构 嵌套对象和数组</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'djlun'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n  more<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> school<span class=\"token punctuation\">:</span> <span class=\"token string\">'pinghu'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> clazz<span class=\"token punctuation\">:</span> <span class=\"token string\">'201'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> more<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span>school<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>clazz<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> info\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`My name </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, and i am </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years old.The name of my school is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>school<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.I am in class</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>clazz<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// My name djlun, and i am 18 years old.The name of my school is pinghu.I am in class201</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h3 id=\"for-of-迭代和解构\"><a class=\"header-anchor\" href=\"#for-of-迭代和解构\" aria-hidden=\"true\">#</a> For of 迭代和解构</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'djlun'</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'zwenj'</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">23</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">}</span> <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`My name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.I am </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years old.`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// My name is djlun.I am 18 years old.</span>\n<span class=\"token comment\">// My name is zwenj.I am 23 years old.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h3 id=\"从作为函数实参的对象中提取数据\"><a class=\"header-anchor\" href=\"#从作为函数实参的对象中提取数据\" aria-hidden=\"true\">#</a> 从作为函数实参的对象中提取数据</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span>\n  info<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'djlun'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">userId</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`userId: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">userId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token comment\">// userId: 123</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">whois</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sex <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`id: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;age: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">; sex: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">whois</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token comment\">// id: 123;name: djlun;age: 18; sex: 0</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"类表达式\"><a class=\"header-anchor\" href=\"#类表达式\" aria-hidden=\"true\">#</a> 类表达式</h2>\n<h4 id=\"描述：用来定义类的一种语法\"><a class=\"header-anchor\" href=\"#描述：用来定义类的一种语法\" aria-hidden=\"true\">#</a> 描述：用来定义类的一种语法</h4>\n<h4 id=\"语法：-2\"><a class=\"header-anchor\" href=\"#语法：-2\" aria-hidden=\"true\">#</a> 语法：</h4>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> MyClass <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">[</span>className<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">extends</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// class body</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h3 id=\"使用类表达式语法创建了一个匿名类\"><a class=\"header-anchor\" href=\"#使用类表达式语法创建了一个匿名类\" aria-hidden=\"true\">#</a> 使用类表达式语法创建了一个匿名类</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> Person <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">sayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'djlun'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nme<span class=\"token punctuation\">.</span><span class=\"token function\">sayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// djlun</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h3 id=\"如果想在类体内部也能引用这个类本身，那么就使用命名类表达式，并且这个类名只能在类体内部访问。\"><a class=\"header-anchor\" href=\"#如果想在类体内部也能引用这个类本身，那么就使用命名类表达式，并且这个类名只能在类体内部访问。\" aria-hidden=\"true\">#</a> 如果想在类体内部也能引用这个类本身，那么就使用命名类表达式，并且这个类名只能在类体内部访问。</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> Persons <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">sayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Person\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Persons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Person {}</span>\n                <span class=\"token comment\">//  __proto__:</span>\n                <span class=\"token comment\">//  constructor: class Person</span>\n                <span class=\"token comment\">//  sayName: ƒ sayName()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Persons<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// class Person {</span>\n                      <span class=\"token comment\">//   constructor() {}</span>\n                      <span class=\"token comment\">//   sayName() {</span>\n                      <span class=\"token comment\">//     return Person</span>\n                      <span class=\"token comment\">//   }</span>\n                      <span class=\"token comment\">// }</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"delete操作符\"><a class=\"header-anchor\" href=\"#delete操作符\" aria-hidden=\"true\">#</a> delete操作符</h2>\n<h4 id=\"描述：用于删除对象的某个属性；如果没有指向这个属性的引用，那它最终会被释放。\"><a class=\"header-anchor\" href=\"#描述：用于删除对象的某个属性；如果没有指向这个属性的引用，那它最终会被释放。\" aria-hidden=\"true\">#</a> 描述：用于删除对象的某个属性；如果没有指向这个属性的引用，那它最终会被释放。</h4>\n<h4 id=\"语法：-3\"><a class=\"header-anchor\" href=\"#语法：-3\" aria-hidden=\"true\">#</a> 语法：</h4>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">delete</span> object<span class=\"token punctuation\">.</span>property \n<span class=\"token keyword\">delete</span> object<span class=\"token punctuation\">[</span><span class=\"token string\">'property'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h4 id=\"返回值：对于所有情况都是true，除非属性是一个自己不可配置的属性，在这种情况下，非严格模式返回-false。严格模式下，抛出异常。\"><a class=\"header-anchor\" href=\"#返回值：对于所有情况都是true，除非属性是一个自己不可配置的属性，在这种情况下，非严格模式返回-false。严格模式下，抛出异常。\" aria-hidden=\"true\">#</a> 返回值：对于所有情况都是true，除非属性是一个自己不可配置的属性，在这种情况下，非严格模式返回 false。严格模式下，抛出异常。</h4>\n<hr>\n<h2 id=\"function-关键字\"><a class=\"header-anchor\" href=\"#function-关键字\" aria-hidden=\"true\">#</a> function*关键字</h2>\n<h4 id=\"描述：在表达式内部定义一个生成器函数\"><a class=\"header-anchor\" href=\"#描述：在表达式内部定义一个生成器函数\" aria-hidden=\"true\">#</a> 描述：在表达式内部定义一个生成器函数</h4>\n<hr>\n<h2 id=\"new运算符\"><a class=\"header-anchor\" href=\"#new运算符\" aria-hidden=\"true\">#</a> new运算符</h2>\n<h3 id=\"new-target-属性\"><a class=\"header-anchor\" href=\"#new-target-属性\" aria-hidden=\"true\">#</a> new.target 属性</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// 在普通的函数调用中（和作为构造函数来调用相对），new.target的值是undefined</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Person</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'please use new'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'has new'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// has new</span>\n<span class=\"token keyword\">let</span> you <span class=\"token operator\">=</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// please use new</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Person {}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>you<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}