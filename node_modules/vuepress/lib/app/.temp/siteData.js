export const siteData = {
  "title": "个人文档",
  "description": " ",
  "base": "/",
  "pages": [
    {
      "key": "v-888ab423e593c",
      "path": "/",
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1547454049593&di=8326d03ba2207a95d178373a7bc2c4c8&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimage%2Fc0%253Dshijue1%252C0%252C0%252C294%252C40%2Fsign%3Dcad2c71522381f308a1485eac168267d%2Fe824b899a9014c083afbdd88007b02087af4f4df.jpg",
        "footer": "djlun | 创建于2019年1月11日"
      }
    },
    {
      "key": "v-97315db16fab7",
      "path": "/code/",
      "title": "代码片段",
      "headers": [
        {
          "level": 2,
          "title": "空",
          "slug": "空"
        }
      ]
    },
    {
      "key": "v-5adffe5306b23",
      "path": "/code/mixin.html",
      "title": "混入"
    },
    {
      "key": "v-1a02ccae76096",
      "path": "/cssdoc/",
      "title": "css黑魔法",
      "headers": [
        {
          "level": 2,
          "title": "空",
          "slug": "空"
        }
      ],
      "frontmatter": {
        "sidebar": "auto"
      }
    },
    {
      "key": "v-0e6122e3491f2",
      "path": "/htmldoc/",
      "title": "html语义化",
      "headers": [
        {
          "level": 2,
          "title": "空",
          "slug": "空"
        }
      ],
      "frontmatter": {
        "sidebar": "auto"
      }
    },
    {
      "key": "v-7a6d670943143",
      "path": "/jsdoc/JSON.html",
      "title": "JSON",
      "headers": [
        {
          "level": 2,
          "title": "JSON.parse()",
          "slug": "json-parse"
        },
        {
          "level": 2,
          "title": "JSON.stringify()",
          "slug": "json-stringify"
        }
      ]
    },
    {
      "key": "v-f55a268fe89d4",
      "path": "/jsdoc/",
      "title": "目录"
    },
    {
      "key": "v-d5e2a50a3df2b",
      "path": "/jsdoc/array.html",
      "title": "数组",
      "headers": [
        {
          "level": 2,
          "title": "介绍",
          "slug": "介绍"
        },
        {
          "level": 2,
          "title": "属性",
          "slug": "属性"
        },
        {
          "level": 3,
          "title": "length",
          "slug": "length"
        },
        {
          "level": 3,
          "title": "constructor",
          "slug": "constructor"
        },
        {
          "level": 2,
          "title": "创建数组",
          "slug": "创建数组"
        },
        {
          "level": 3,
          "title": "字面量或者Array构造器",
          "slug": "字面量或者array构造器"
        },
        {
          "level": 3,
          "title": "从 类数组对象 或者 可迭代对象 中创建一个新的数组实例：",
          "slug": "从-类数组对象-或者-可迭代对象-中创建一个新的数组实例："
        },
        {
          "level": 3,
          "title": "Array.from()",
          "slug": "array-from"
        },
        {
          "level": 3,
          "title": "创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型：",
          "slug": "创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型："
        },
        {
          "level": 3,
          "title": "Array.of()",
          "slug": "array-of"
        },
        {
          "level": 3,
          "title": "数组去重合并",
          "slug": "数组去重合并"
        },
        {
          "level": 2,
          "title": "什么是Set结构？",
          "slug": "什么是set结构？"
        },
        {
          "level": 3,
          "title": "set对象的属性：",
          "slug": "set对象的属性："
        },
        {
          "level": 3,
          "title": "prototype",
          "slug": "prototype"
        },
        {
          "level": 3,
          "title": "Set.prototype.constructor",
          "slug": "set-prototype-constructor"
        },
        {
          "level": 3,
          "title": "Set.prototype.size",
          "slug": "set-prototype-size"
        },
        {
          "level": 3,
          "title": "set对象的方法：",
          "slug": "set对象的方法："
        },
        {
          "level": 3,
          "title": "add()",
          "slug": "add"
        },
        {
          "level": 3,
          "title": "clear()",
          "slug": "clear"
        },
        {
          "level": 3,
          "title": "delete()",
          "slug": "delete"
        },
        {
          "level": 3,
          "title": "forEach() （和array的forEach方法类似）",
          "slug": "foreach-（和array的foreach方法类似）"
        },
        {
          "level": 3,
          "title": "has()",
          "slug": "has"
        },
        {
          "level": 3,
          "title": "entries()",
          "slug": "entries"
        },
        {
          "level": 3,
          "title": "values()",
          "slug": "values"
        },
        {
          "level": 3,
          "title": "keys()",
          "slug": "keys"
        },
        {
          "level": 3,
          "title": "Set()对象的迭代(遍历)",
          "slug": "set-对象的迭代-遍历"
        },
        {
          "level": 3,
          "title": "Set和Array互换",
          "slug": "set和array互换"
        },
        {
          "level": 3,
          "title": "使用Set实现数学上的集合定义",
          "slug": "使用set实现数学上的集合定义"
        },
        {
          "level": 2,
          "title": "什么是Map结构？",
          "slug": "什么是map结构？"
        },
        {
          "level": 3,
          "title": "创建一个Map对象",
          "slug": "创建一个map对象"
        },
        {
          "level": 3,
          "title": "注意！当一个Map对象的键为引用值时",
          "slug": "注意！当一个map对象的键为引用值时"
        },
        {
          "level": 3,
          "title": "Map和Object的比较？",
          "slug": "map和object的比较？"
        },
        {
          "level": 3,
          "title": "Map对象的属性：",
          "slug": "map对象的属性："
        },
        {
          "level": 3,
          "title": "length",
          "slug": "length-2"
        },
        {
          "level": 3,
          "title": "prototype",
          "slug": "prototype-2"
        },
        {
          "level": 3,
          "title": "constructor",
          "slug": "constructor-2"
        },
        {
          "level": 3,
          "title": "size",
          "slug": "size"
        },
        {
          "level": 3,
          "title": "map对象的方法：",
          "slug": "map对象的方法："
        },
        {
          "level": 3,
          "title": "clear()",
          "slug": "clear-2"
        },
        {
          "level": 3,
          "title": "delete()",
          "slug": "delete-2"
        },
        {
          "level": 3,
          "title": "set()",
          "slug": "set"
        },
        {
          "level": 3,
          "title": "get()",
          "slug": "get"
        },
        {
          "level": 3,
          "title": "has()",
          "slug": "has-2"
        },
        {
          "level": 3,
          "title": "forEach()",
          "slug": "foreach"
        },
        {
          "level": 3,
          "title": "entries()",
          "slug": "entries-2"
        },
        {
          "level": 3,
          "title": "keys()",
          "slug": "keys-2"
        },
        {
          "level": 3,
          "title": "values()",
          "slug": "values-2"
        },
        {
          "level": 2,
          "title": "通过索引访问数组元素",
          "slug": "通过索引访问数组元素"
        },
        {
          "level": 2,
          "title": "遍历数组",
          "slug": "遍历数组"
        },
        {
          "level": 3,
          "title": "forEach() (这是数组原型上带的方法)",
          "slug": "foreach-这是数组原型上带的方法"
        },
        {
          "level": 3,
          "title": "map()",
          "slug": "map"
        },
        {
          "level": 3,
          "title": "for循环",
          "slug": "for循环"
        },
        {
          "level": 2,
          "title": "添加元素到数组的末尾",
          "slug": "添加元素到数组的末尾"
        },
        {
          "level": 3,
          "title": "push()",
          "slug": "push"
        },
        {
          "level": 2,
          "title": "添加元素到数组的头部",
          "slug": "添加元素到数组的头部"
        },
        {
          "level": 3,
          "title": "unshift()",
          "slug": "unshift"
        },
        {
          "level": 2,
          "title": "删除数组末尾一个元素",
          "slug": "删除数组末尾一个元素"
        },
        {
          "level": 3,
          "title": "pop()",
          "slug": "pop"
        },
        {
          "level": 2,
          "title": "删除数组头部一个元素",
          "slug": "删除数组头部一个元素"
        },
        {
          "level": 3,
          "title": "shift()",
          "slug": "shift"
        },
        {
          "level": 2,
          "title": "通过索引删除元素",
          "slug": "通过索引删除元素"
        },
        {
          "level": 3,
          "title": "splice()",
          "slug": "splice"
        },
        {
          "level": 2,
          "title": "找出某个元素在数组中对应的索引",
          "slug": "找出某个元素在数组中对应的索引"
        },
        {
          "level": 3,
          "title": "indexOf()",
          "slug": "indexof"
        },
        {
          "level": 2,
          "title": "复制一个数组",
          "slug": "复制一个数组"
        },
        {
          "level": 3,
          "title": "slice()",
          "slug": "slice"
        },
        {
          "level": 2,
          "title": "判断某个变量是否是一个数组对象",
          "slug": "判断某个变量是否是一个数组对象"
        },
        {
          "level": 3,
          "title": "Array.isArray()",
          "slug": "array-isarray"
        },
        {
          "level": 2,
          "title": "浅复制数组的一部分到此数组的另一个位置",
          "slug": "浅复制数组的一部分到此数组的另一个位置"
        },
        {
          "level": 3,
          "title": "*copyWithin()",
          "slug": "copywithin"
        },
        {
          "level": 2,
          "title": "Array对象方法",
          "slug": "array对象方法"
        },
        {
          "level": 3,
          "title": "fill()",
          "slug": "fill"
        },
        {
          "level": 3,
          "title": "reverse()",
          "slug": "reverse"
        },
        {
          "level": 3,
          "title": "sort()",
          "slug": "sort"
        },
        {
          "level": 3,
          "title": "concat()",
          "slug": "concat"
        },
        {
          "level": 3,
          "title": "slice()",
          "slug": "slice-2"
        },
        {
          "level": 3,
          "title": "join()",
          "slug": "join"
        },
        {
          "level": 3,
          "title": "toString()",
          "slug": "tostring"
        },
        {
          "level": 3,
          "title": "toLocaleString()",
          "slug": "tolocalestring"
        },
        {
          "level": 3,
          "title": "forEach()",
          "slug": "foreach-2"
        },
        {
          "level": 3,
          "title": "find()",
          "slug": "find"
        },
        {
          "level": 3,
          "title": "findIndex()",
          "slug": "findindex"
        },
        {
          "level": 3,
          "title": "*includes()",
          "slug": "includes"
        },
        {
          "level": 3,
          "title": "indexOf()",
          "slug": "indexof-2"
        },
        {
          "level": 3,
          "title": "lastIndexOf()",
          "slug": "lastindexof"
        },
        {
          "level": 3,
          "title": "map()",
          "slug": "map-2"
        },
        {
          "level": 3,
          "title": "reduce()",
          "slug": "reduce"
        },
        {
          "level": 3,
          "title": "reduce()的应用：",
          "slug": "reduce-的应用："
        },
        {
          "level": 3,
          "title": "累加对象数组里的值",
          "slug": "累加对象数组里的值"
        },
        {
          "level": 3,
          "title": "将二维数组转化为一维",
          "slug": "将二维数组转化为一维"
        },
        {
          "level": 3,
          "title": "计算数组中每个元素出现的次数",
          "slug": "计算数组中每个元素出现的次数"
        },
        {
          "level": 3,
          "title": "按属性对Object分类",
          "slug": "按属性对object分类"
        },
        {
          "level": 3,
          "title": "把一个对象数组 中的对象 中的数组的元素 拎出来，存到一个数组中",
          "slug": "把一个对象数组-中的对象-中的数组的元素-拎出来，存到一个数组中"
        },
        {
          "level": 3,
          "title": "数组去重",
          "slug": "数组去重"
        },
        {
          "level": 3,
          "title": "按顺序运行Promise",
          "slug": "按顺序运行promise"
        },
        {
          "level": 3,
          "title": "功能型函数管道",
          "slug": "功能型函数管道"
        },
        {
          "level": 3,
          "title": "reduceRight()",
          "slug": "reduceright"
        },
        {
          "level": 3,
          "title": "entries()",
          "slug": "entries-3"
        },
        {
          "level": 3,
          "title": "keys()",
          "slug": "keys-3"
        },
        {
          "level": 3,
          "title": "values()",
          "slug": "values-3"
        },
        {
          "level": 3,
          "title": "every()",
          "slug": "every"
        },
        {
          "level": 3,
          "title": "some()",
          "slug": "some"
        },
        {
          "level": 3,
          "title": "filter()",
          "slug": "filter"
        },
        {
          "level": 2,
          "title": "ES6",
          "slug": "es6"
        },
        {
          "level": 3,
          "title": "扩展运算符（...）",
          "slug": "扩展运算符（-）"
        }
      ]
    },
    {
      "key": "v-a98a8a6cf54df",
      "path": "/jsdoc/async.html",
      "title": "async await || yield function*",
      "headers": [
        {
          "level": 2,
          "title": "AsyncFunction构造函数",
          "slug": "asyncfunction构造函数"
        },
        {
          "level": 2,
          "title": "async function 声明（异步函数语句）",
          "slug": "async-function-声明（异步函数语句）"
        },
        {
          "level": 3,
          "title": "通过async函数重写 promise 链",
          "slug": "通过async函数重写-promise-链"
        },
        {
          "level": 2,
          "title": "async function 关键字（异步函数表达式）",
          "slug": "async-function-关键字（异步函数表达式）"
        },
        {
          "level": 2,
          "title": "await",
          "slug": "await"
        },
        {
          "level": 2,
          "title": "function关键字（function表达式）",
          "slug": "function关键字（function表达式）"
        },
        {
          "level": 2,
          "title": "function*声明",
          "slug": "function-声明"
        },
        {
          "level": 2,
          "title": "yield 关键字",
          "slug": "yield-关键字"
        },
        {
          "level": 2,
          "title": "yield* 表达式",
          "slug": "yield-表达式"
        }
      ]
    },
    {
      "key": "v-e209ca5363f81",
      "path": "/jsdoc/axios.html",
      "title": "axios",
      "headers": [
        {
          "level": 2,
          "title": "安装",
          "slug": "安装"
        },
        {
          "level": 2,
          "title": "get请求",
          "slug": "get请求"
        },
        {
          "level": 2,
          "title": "post请求",
          "slug": "post请求"
        },
        {
          "level": 2,
          "title": "多个并发请求",
          "slug": "多个并发请求"
        },
        {
          "level": 2,
          "title": "api",
          "slug": "api"
        },
        {
          "level": 3,
          "title": "axios(config)",
          "slug": "axios-config"
        },
        {
          "level": 3,
          "title": "方法的别名",
          "slug": "方法的别名"
        },
        {
          "level": 3,
          "title": "并发",
          "slug": "并发"
        },
        {
          "level": 3,
          "title": "创建实例",
          "slug": "创建实例"
        },
        {
          "level": 2,
          "title": "拦截器",
          "slug": "拦截器"
        },
        {
          "level": 2,
          "title": "取消请求",
          "slug": "取消请求"
        }
      ]
    },
    {
      "key": "v-a34e86b38f02c",
      "path": "/jsdoc/bibao.html",
      "title": "闭包",
      "headers": [
        {
          "level": 2,
          "title": "什么是闭包",
          "slug": "什么是闭包"
        },
        {
          "level": 2,
          "title": "闭包可能形成的原因",
          "slug": "闭包可能形成的原因"
        },
        {
          "level": 2,
          "title": "闭包与匿名函数区别",
          "slug": "闭包与匿名函数区别"
        },
        {
          "level": 2,
          "title": "闭包的作用",
          "slug": "闭包的作用"
        }
      ]
    },
    {
      "key": "v-ed4d6a20d9bd7",
      "path": "/jsdoc/boolean.html",
      "title": "布尔类型",
      "headers": [
        {
          "level": 2,
          "title": "定义布尔类型的变量",
          "slug": "定义布尔类型的变量"
        },
        {
          "level": 2,
          "title": "属性",
          "slug": "属性"
        },
        {
          "level": 3,
          "title": "constructor",
          "slug": "constructor"
        },
        {
          "level": 3,
          "title": "prototype",
          "slug": "prototype"
        },
        {
          "level": 2,
          "title": "方法",
          "slug": "方法"
        },
        {
          "level": 3,
          "title": "toString()",
          "slug": "tostring"
        },
        {
          "level": 3,
          "title": "valueOf()",
          "slug": "valueof"
        }
      ]
    },
    {
      "key": "v-4206c01455058",
      "path": "/jsdoc/class.html",
      "title": "class类"
    },
    {
      "key": "v-def94b1365d8a",
      "path": "/jsdoc/copy.html",
      "title": "克隆",
      "headers": [
        {
          "level": 2,
          "title": "浅克隆",
          "slug": "浅克隆"
        }
      ]
    },
    {
      "key": "v-bff7302c53243",
      "path": "/jsdoc/decorator.html",
      "title": "类的修饰器"
    },
    {
      "key": "v-ae2fc75d8c653",
      "path": "/jsdoc/fetch.html",
      "title": "fetch",
      "headers": [
        {
          "level": 3,
          "title": "必需参数：资源的路径",
          "slug": "必需参数：资源的路径"
        },
        {
          "level": 3,
          "title": "返回值：无论请求成功与否，它都返回一个 Promise 对象，resolve 对应请求的 Response",
          "slug": "返回值：无论请求成功与否，它都返回一个-promise-对象，resolve-对应请求的-response"
        },
        {
          "level": 2,
          "title": "处理请求和响应的方式",
          "slug": "处理请求和响应的方式"
        },
        {
          "level": 3,
          "title": "service workers",
          "slug": "service-workers"
        },
        {
          "level": 3,
          "title": "Cache API",
          "slug": "cache-api"
        }
      ]
    },
    {
      "key": "v-bfdc1fa7c49df",
      "path": "/jsdoc/math.html",
      "title": "Math对象",
      "headers": [
        {
          "level": 2,
          "title": "数学常数(对象属性)",
          "slug": "数学常数-对象属性"
        },
        {
          "level": 2,
          "title": "对象方法",
          "slug": "对象方法"
        },
        {
          "level": 3,
          "title": "valueOf()",
          "slug": "valueof"
        },
        {
          "level": 3,
          "title": "abs()",
          "slug": "abs"
        },
        {
          "level": 3,
          "title": "ceil() floor() round()",
          "slug": "ceil-floor-round"
        },
        {
          "level": 3,
          "title": "max() min()",
          "slug": "max-min"
        },
        {
          "level": 3,
          "title": "random()",
          "slug": "random"
        },
        {
          "level": 3,
          "title": "cos() sin() tan()",
          "slug": "cos-sin-tan"
        },
        {
          "level": 3,
          "title": "acos() asin() atan() atan2()",
          "slug": "acos-asin-atan-atan2"
        },
        {
          "level": 3,
          "title": "exp() log() pow() sqrt()",
          "slug": "exp-log-pow-sqrt"
        },
        {
          "level": 2,
          "title": "可能会用到（ES6）",
          "slug": "可能会用到（es6）"
        },
        {
          "level": 3,
          "title": "Math.trunc()",
          "slug": "math-trunc"
        },
        {
          "level": 3,
          "title": "Math.sign()",
          "slug": "math-sign"
        }
      ]
    },
    {
      "key": "v-5b24846ec7922",
      "path": "/jsdoc/module.html",
      "title": "module模块"
    },
    {
      "key": "v-170e96aeb5525",
      "path": "/jsdoc/null.html",
      "title": "null"
    },
    {
      "key": "v-b1cc3c190f0c",
      "path": "/jsdoc/number.html",
      "title": "数字类型",
      "headers": [
        {
          "level": 2,
          "title": "Number对象属性",
          "slug": "number对象属性"
        },
        {
          "level": 3,
          "title": "constructor",
          "slug": "constructor"
        },
        {
          "level": 3,
          "title": "prototype",
          "slug": "prototype"
        },
        {
          "level": 3,
          "title": "MAX_VALUE",
          "slug": "max-value"
        },
        {
          "level": 3,
          "title": "MIN_VALUE",
          "slug": "min-value"
        },
        {
          "level": 3,
          "title": "NaN",
          "slug": "nan"
        },
        {
          "level": 3,
          "title": "NEGATIVE_INFINITY",
          "slug": "negative-infinity"
        },
        {
          "level": 3,
          "title": "POSITIVE_INFINITY",
          "slug": "positive-infinity"
        },
        {
          "level": 2,
          "title": "Number对象方法",
          "slug": "number对象方法"
        },
        {
          "level": 3,
          "title": "toString()",
          "slug": "tostring"
        },
        {
          "level": 3,
          "title": "toLocaleString()",
          "slug": "tolocalestring"
        },
        {
          "level": 3,
          "title": "toFixed()",
          "slug": "tofixed"
        },
        {
          "level": 3,
          "title": "toExponential()",
          "slug": "toexponential"
        },
        {
          "level": 3,
          "title": "toPrecision()",
          "slug": "toprecision"
        },
        {
          "level": 3,
          "title": "valueOf()",
          "slug": "valueof"
        },
        {
          "level": 2,
          "title": "ES6新增",
          "slug": "es6新增"
        },
        {
          "level": 3,
          "title": "Number.isNaN()",
          "slug": "number-isnan"
        },
        {
          "level": 3,
          "title": "Number.isFinite()",
          "slug": "number-isfinite"
        },
        {
          "level": 3,
          "title": "Number.isInteger()",
          "slug": "number-isinteger"
        },
        {
          "level": 3,
          "title": "Number.isSafeInteger()",
          "slug": "number-issafeinteger"
        },
        {
          "level": 3,
          "title": "Number.parseFloat()",
          "slug": "number-parsefloat"
        },
        {
          "level": 3,
          "title": "Number.parseInt()",
          "slug": "number-parseint"
        }
      ]
    },
    {
      "key": "v-c76bb06b02517",
      "path": "/jsdoc/object.html",
      "title": "对象",
      "headers": [
        {
          "level": 2,
          "title": "方法",
          "slug": "方法"
        },
        {
          "level": 3,
          "title": "Object.create()",
          "slug": "object-create"
        },
        {
          "level": 3,
          "title": "用 Object.create实现类式继承",
          "slug": "用-object-create实现类式继承"
        },
        {
          "level": 3,
          "title": "Object.assign()",
          "slug": "object-assign"
        },
        {
          "level": 3,
          "title": "复制一个对象",
          "slug": "复制一个对象"
        },
        {
          "level": 3,
          "title": "深拷贝",
          "slug": "深拷贝"
        },
        {
          "level": 3,
          "title": "拷贝访问器",
          "slug": "拷贝访问器"
        },
        {
          "level": 3,
          "title": "Object.defineProperty()",
          "slug": "object-defineproperty"
        },
        {
          "level": 3,
          "title": "什么是属性描述符？",
          "slug": "什么是属性描述符？"
        },
        {
          "level": 3,
          "title": "Object.defineProperties()",
          "slug": "object-defineproperties"
        },
        {
          "level": 3,
          "title": "Object.entries()",
          "slug": "object-entries"
        },
        {
          "level": 3,
          "title": "将一个obj转化为map结构",
          "slug": "将一个obj转化为map结构"
        },
        {
          "level": 3,
          "title": "Object.getOwnPropertyDescriptor()",
          "slug": "object-getownpropertydescriptor"
        },
        {
          "level": 3,
          "title": "Object.getOwnPropertyNames()",
          "slug": "object-getownpropertynames"
        },
        {
          "level": 3,
          "title": "Object.getOwnPropertySymbols()",
          "slug": "object-getownpropertysymbols"
        },
        {
          "level": 3,
          "title": "Object.getPrototypeOf()",
          "slug": "object-getprototypeof"
        },
        {
          "level": 3,
          "title": "Object.is()",
          "slug": "object-is"
        },
        {
          "level": 3,
          "title": "Object.freeze()",
          "slug": "object-freeze"
        },
        {
          "level": 3,
          "title": "Object.isFrozen()",
          "slug": "object-isfrozen"
        },
        {
          "level": 3,
          "title": "Object.seal()",
          "slug": "object-seal"
        },
        {
          "level": 3,
          "title": "Object.isSealed()",
          "slug": "object-issealed"
        },
        {
          "level": 3,
          "title": "Object.preventExtensions()",
          "slug": "object-preventextensions"
        },
        {
          "level": 3,
          "title": "Object.isExtensible()",
          "slug": "object-isextensible"
        },
        {
          "level": 3,
          "title": "Object.keys()",
          "slug": "object-keys"
        },
        {
          "level": 3,
          "title": "Object.values()",
          "slug": "object-values"
        },
        {
          "level": 3,
          "title": "Object.setPrototypeOf()",
          "slug": "object-setprototypeof"
        },
        {
          "level": 2,
          "title": "继承方法：",
          "slug": "继承方法："
        },
        {
          "level": 3,
          "title": "hasOwnProperty()",
          "slug": "hasownproperty"
        },
        {
          "level": 3,
          "title": "isPrototypeOf()",
          "slug": "isprototypeof"
        },
        {
          "level": 3,
          "title": "propertyIsEnumerable()",
          "slug": "propertyisenumerable"
        },
        {
          "level": 3,
          "title": "toLocaleString()",
          "slug": "tolocalestring"
        },
        {
          "level": 3,
          "title": "toString()",
          "slug": "tostring"
        },
        {
          "level": 3,
          "title": "watch()",
          "slug": "watch"
        },
        {
          "level": 3,
          "title": "unwatch()",
          "slug": "unwatch"
        },
        {
          "level": 2,
          "title": "运算符",
          "slug": "运算符"
        }
      ]
    },
    {
      "key": "v-c8215dd2ef224",
      "path": "/jsdoc/operator.html",
      "title": "运算符",
      "headers": [
        {
          "level": 2,
          "title": "in",
          "slug": "in"
        },
        {
          "level": 2,
          "title": "instanceof",
          "slug": "instanceof"
        },
        {
          "level": 2,
          "title": "解构赋值",
          "slug": "解构赋值"
        },
        {
          "level": 3,
          "title": "函数参数默认值",
          "slug": "函数参数默认值"
        },
        {
          "level": 3,
          "title": "解构 嵌套对象和数组",
          "slug": "解构-嵌套对象和数组"
        },
        {
          "level": 3,
          "title": "For of 迭代和解构",
          "slug": "for-of-迭代和解构"
        },
        {
          "level": 3,
          "title": "从作为函数实参的对象中提取数据",
          "slug": "从作为函数实参的对象中提取数据"
        },
        {
          "level": 2,
          "title": "类表达式",
          "slug": "类表达式"
        },
        {
          "level": 3,
          "title": "使用类表达式语法创建了一个匿名类",
          "slug": "使用类表达式语法创建了一个匿名类"
        },
        {
          "level": 3,
          "title": "如果想在类体内部也能引用这个类本身，那么就使用命名类表达式，并且这个类名只能在类体内部访问。",
          "slug": "如果想在类体内部也能引用这个类本身，那么就使用命名类表达式，并且这个类名只能在类体内部访问。"
        },
        {
          "level": 2,
          "title": "delete操作符",
          "slug": "delete操作符"
        },
        {
          "level": 2,
          "title": "function*关键字",
          "slug": "function-关键字"
        },
        {
          "level": 2,
          "title": "new运算符",
          "slug": "new运算符"
        },
        {
          "level": 3,
          "title": "new.target 属性",
          "slug": "new-target-属性"
        }
      ]
    },
    {
      "key": "v-cd743ba1767e4",
      "path": "/jsdoc/promise.html",
      "title": "promise",
      "headers": [
        {
          "level": 2,
          "title": "Promise构造函数",
          "slug": "promise构造函数"
        },
        {
          "level": 3,
          "title": "语法",
          "slug": "语法"
        },
        {
          "level": 3,
          "title": "参数：[executor]：带有 resolve 和 reject 两个函数参数的函数",
          "slug": "参数：-executor-：带有-resolve-和-reject-两个函数参数的函数"
        },
        {
          "level": 3,
          "title": "参数说明：",
          "slug": "参数说明："
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 2,
          "title": "方法",
          "slug": "方法"
        },
        {
          "level": 3,
          "title": "Promise.all(iterable)",
          "slug": "promise-all-iterable"
        },
        {
          "level": 3,
          "title": "Promise.race(iterable)",
          "slug": "promise-race-iterable"
        },
        {
          "level": 3,
          "title": "Promise.reject(reason)",
          "slug": "promise-reject-reason"
        },
        {
          "level": 3,
          "title": "Promise.resolve(value)",
          "slug": "promise-resolve-value"
        },
        {
          "level": 3,
          "title": "catch()",
          "slug": "catch"
        },
        {
          "level": 3,
          "title": "then()",
          "slug": "then"
        },
        {
          "level": 3,
          "title": "finally()",
          "slug": "finally"
        },
        {
          "level": 2,
          "title": "创建 Promise",
          "slug": "创建-promise"
        },
        {
          "level": 3,
          "title": "Promise 对象是由关键字 new 及其构造函数来创建的",
          "slug": "promise-对象是由关键字-new-及其构造函数来创建的"
        },
        {
          "level": 3,
          "title": "想要让某个函数拥有 promise 功能，只需让其返回一个 promise 即可",
          "slug": "想要让某个函数拥有-promise-功能，只需让其返回一个-promise-即可"
        },
        {
          "level": 3,
          "title": "一个简单的例子",
          "slug": "一个简单的例子"
        },
        {
          "level": 3,
          "title": "一个高级一点的例子",
          "slug": "一个高级一点的例子"
        },
        {
          "level": 2,
          "title": "使用 Promise",
          "slug": "使用-promise"
        },
        {
          "level": 3,
          "title": "什么是 Promise？",
          "slug": "什么是-promise？"
        },
        {
          "level": 3,
          "title": "没有 Promise 之前？",
          "slug": "没有-promise-之前？"
        },
        {
          "level": 3,
          "title": "使用 Promise 的好处？",
          "slug": "使用-promise-的好处？"
        },
        {
          "level": 3,
          "title": "怎样使用 Promise？",
          "slug": "怎样使用-promise？"
        },
        {
          "level": 3,
          "title": "如何创建 Promise？",
          "slug": "如何创建-promise？"
        }
      ]
    },
    {
      "key": "v-6475144ddb091",
      "path": "/jsdoc/regexp.html",
      "title": "正则表达式"
    },
    {
      "key": "v-68c7076a995b7",
      "path": "/jsdoc/string.html",
      "title": "字符串类型",
      "headers": [
        {
          "level": 2,
          "title": "定义字符串",
          "slug": "定义字符串"
        },
        {
          "level": 3,
          "title": "有没有使用new的区别？",
          "slug": "有没有使用new的区别？"
        },
        {
          "level": 3,
          "title": "字符串怎么比较？",
          "slug": "字符串怎么比较？"
        },
        {
          "level": 2,
          "title": "属性",
          "slug": "属性"
        },
        {
          "level": 3,
          "title": "constructor",
          "slug": "constructor"
        },
        {
          "level": 3,
          "title": "length",
          "slug": "length"
        },
        {
          "level": 3,
          "title": "prototype",
          "slug": "prototype"
        },
        {
          "level": 3,
          "title": "对prototype进行扩展",
          "slug": "对prototype进行扩展"
        },
        {
          "level": 2,
          "title": "常用方法",
          "slug": "常用方法"
        },
        {
          "level": 3,
          "title": "charAt()",
          "slug": "charat"
        },
        {
          "level": 3,
          "title": "charCodeAt()",
          "slug": "charcodeat"
        },
        {
          "level": 3,
          "title": "fromCharCode()",
          "slug": "fromcharcode"
        },
        {
          "level": 3,
          "title": "concat()",
          "slug": "concat"
        },
        {
          "level": 3,
          "title": "split()",
          "slug": "split"
        },
        {
          "level": 3,
          "title": "indexOf()",
          "slug": "indexof"
        },
        {
          "level": 3,
          "title": "lastIndexOf()",
          "slug": "lastindexof"
        },
        {
          "level": 2,
          "title": "es6新增",
          "slug": "es6新增"
        },
        {
          "level": 3,
          "title": "includes()",
          "slug": "includes"
        },
        {
          "level": 3,
          "title": "startsWith()",
          "slug": "startswith"
        },
        {
          "level": 3,
          "title": "endsWith()",
          "slug": "endswith"
        },
        {
          "level": 3,
          "title": "repeat()",
          "slug": "repeat"
        },
        {
          "level": 3,
          "title": "padStart()",
          "slug": "padstart"
        },
        {
          "level": 3,
          "title": "padEnd()",
          "slug": "padend"
        },
        {
          "level": 3,
          "title": "trim()",
          "slug": "trim"
        },
        {
          "level": 2,
          "title": "字符串常见面试题",
          "slug": "字符串常见面试题"
        },
        {
          "level": 3,
          "title": "统计字符串中每个字符的个数",
          "slug": "统计字符串中每个字符的个数"
        },
        {
          "level": 3,
          "title": "用户名格式验证，比如长度在6—20之间，不能用数字开头，只能包含数字、字母、下划线",
          "slug": "用户名格式验证，比如长度在6—20之间，不能用数字开头，只能包含数字、字母、下划线"
        },
        {
          "level": 2,
          "title": "正则表达式验证方法大全",
          "slug": "正则表达式验证方法大全"
        },
        {
          "level": 2,
          "title": "以下方法逻辑中不常用",
          "slug": "以下方法逻辑中不常用"
        },
        {
          "level": 3,
          "title": "valueOf()",
          "slug": "valueof"
        },
        {
          "level": 3,
          "title": "toString()",
          "slug": "tostring"
        },
        {
          "level": 3,
          "title": "slice()",
          "slug": "slice"
        },
        {
          "level": 3,
          "title": "substring()",
          "slug": "substring"
        },
        {
          "level": 3,
          "title": "substr()",
          "slug": "substr"
        },
        {
          "level": 3,
          "title": "toLowerCase()",
          "slug": "tolowercase"
        },
        {
          "level": 3,
          "title": "toUpperCase()",
          "slug": "touppercase"
        },
        {
          "level": 3,
          "title": "toLocaleLowerCase()",
          "slug": "tolocalelowercase"
        },
        {
          "level": 3,
          "title": "toLocaleUpperCase()",
          "slug": "tolocaleuppercase"
        },
        {
          "level": 3,
          "title": "（待深入了解）match()",
          "slug": "（待深入了解）match"
        },
        {
          "level": 3,
          "title": "（待深入了解）search()",
          "slug": "（待深入了解）search"
        },
        {
          "level": 3,
          "title": "（待深入了解）replace()",
          "slug": "（待深入了解）replace"
        },
        {
          "level": 3,
          "title": "（待了解）localeCompare()",
          "slug": "（待了解）localecompare"
        },
        {
          "level": 2,
          "title": "以下是有对应html的js方法",
          "slug": "以下是有对应html的js方法"
        },
        {
          "level": 3,
          "title": "anchor()",
          "slug": "anchor"
        },
        {
          "level": 3,
          "title": "big()",
          "slug": "big"
        },
        {
          "level": 3,
          "title": "small()",
          "slug": "small"
        },
        {
          "level": 3,
          "title": "bold()",
          "slug": "bold"
        },
        {
          "level": 3,
          "title": "fixed()",
          "slug": "fixed"
        },
        {
          "level": 3,
          "title": "fontsize()",
          "slug": "fontsize"
        },
        {
          "level": 3,
          "title": "fontcolor()",
          "slug": "fontcolor"
        },
        {
          "level": 3,
          "title": "italics()",
          "slug": "italics"
        },
        {
          "level": 3,
          "title": "link()",
          "slug": "link"
        },
        {
          "level": 3,
          "title": "strike()",
          "slug": "strike"
        },
        {
          "level": 3,
          "title": "sub()",
          "slug": "sub"
        },
        {
          "level": 3,
          "title": "sup()",
          "slug": "sup"
        },
        {
          "level": 2,
          "title": "以下是没看到效果的方法",
          "slug": "以下是没看到效果的方法"
        },
        {
          "level": 3,
          "title": "blink()",
          "slug": "blink"
        }
      ]
    },
    {
      "key": "v-ceb46f604c22f",
      "path": "/jsdoc/undefined.html",
      "title": "undefined",
      "headers": [
        {
          "level": 2,
          "title": "来决定一个变量是否拥有值",
          "slug": "来决定一个变量是否拥有值"
        }
      ]
    },
    {
      "key": "v-b3c4a619743b8",
      "path": "/mdgram/",
      "title": "编写时语法规定",
      "frontmatter": {
        "sidebar": "auto"
      }
    },
    {
      "key": "v-3f16aa72f6af8",
      "path": "/resume/",
      "title": "个人简历",
      "headers": [
        {
          "level": 2,
          "title": "空",
          "slug": "空"
        }
      ],
      "frontmatter": {
        "sidebar": "auto"
      }
    },
    {
      "key": "v-5c7ed45380b9c",
      "path": "/todo/",
      "title": "do",
      "headers": [
        {
          "level": 2,
          "title": "未完成",
          "slug": "未完成"
        },
        {
          "level": 2,
          "title": "已完成",
          "slug": "已完成"
        }
      ],
      "frontmatter": {
        "sidebar": "auto"
      }
    },
    {
      "key": "v-951cd509a2acc",
      "path": "/vpress/",
      "title": "阅读vuepress文档的记录",
      "headers": [
        {
          "level": 2,
          "title": "简单介绍",
          "slug": "简单介绍"
        },
        {
          "level": 2,
          "title": "vuepress的markdown扩展",
          "slug": "vuepress的markdown扩展"
        }
      ],
      "frontmatter": {
        "sidebar": "auto"
      }
    }
  ],
  "themeConfig": {
    "nav": [
      {
        "text": "vuepress",
        "link": "/vpress/"
      },
      {
        "text": "js文档",
        "link": "/jsdoc/"
      },
      {
        "text": "md语法",
        "link": "/mdgram/"
      },
      {
        "text": "github",
        "link": "https://github.com/djl57/start-vuepress"
      }
    ],
    "sidebar": {
      "/jsdoc/": [
        "",
        "string",
        "number",
        "boolean",
        "array",
        "object",
        "null",
        "undefined",
        "math",
        "bibao",
        "promise",
        "async",
        "regexp",
        "class",
        "decorator",
        "module",
        "operator",
        "axios",
        "fetch",
        "JSON",
        "copy"
      ],
      "/code/": [
        "",
        "mixin"
      ]
    },
    "sidebarDepth": 2
  }
}